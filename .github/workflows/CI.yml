name: Build

on:
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
      images_dir: /opt/images
    strategy:
      matrix:
        include:
          - build_variant: "mt7620"
            targets: "PSG1218"
          - build_variant: "mt7621"
            targets: "RM2100"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Prepare
        run: |
          sudo apt-get update
          sudo apt-get install libtool-bin gperf python3-docutils autopoint gettext
          mkdir -p dist
          rm -rf ./trunk/user/dnsmasq/dnsmasq-2.8x/*
          rm -rf ./trunk/user/miniupnpd/miniupnpd-2.x/*
          wget https://github.com/luoluodaduan/dnsmasq/archive/refs/heads/main.zip -O dnsmasq.zip
          unzip -d dist dnsmasq.zip
          /bin/cp -rf ./dist/dnsmasq-main/* ./trunk/user/dnsmasq/dnsmasq-2.8x
          rm -rf dnsmasq.zip
          rm -rf dist
          sh ./trunk/tools/shellcheck.sh
          cd toolchain-mipsel
          sh dl_toolchain.sh

      - name: Build Padavan
        run: |
          cd trunk
          mkdir -p ${images_dir}
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx ${images_dir}/$m.trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Padavan-${{ env.targets }}
          path: ${{ env.images_dir }}

      - name: Delete Workflow
        uses: Mattraks/delete-workflow-runs@v2
        with:
          keep_minimum_runs: 1
          retain_days: 1
